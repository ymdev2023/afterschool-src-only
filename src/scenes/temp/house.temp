import {
    endInteraction,
    generateOldManComponents,
    startInteraction,
} from "../entities/oldman.js";
import {
    generatePlayerComponents,
    setPlayerControls,
} from "../entities/player.js";
import { gameState } from "../state/stateManagers.js";
import { healthBar } from "../uiComponents/healthbar.js";
import {
    colorizeBackground,
    drawBoundaries,
    drawTiles,
    fetchMapData,
} from "../utils.js";
import { fadeInBGM } from "../utils.js";
import { toggleLocale, toggleMute, setupMainMenuShortcut } from "../utils.js";
export default async function house(k) {
    fadeInBGM(k, "rpg-first-bgm"); // 수정된 부분: house-bgm → rpg-first-bgm

    colorizeBackground(k, 27, 29, 52);

    const mapData = await fetchMapData("./assets/images/temp/house.json"); // 수정된 부분: images 폴더로 이동
    const map = k.add([k.pos(520, 200)]);

    const entities = {
        oldman: null,
        player: null,
    };

    const layers = mapData.layers;
    for (const layer of layers) {
        if (layer.name === "Boundaries") {
            drawBoundaries(k, map, layer);
            continue;
        }

        if (layer.name === "SpawnPoints") {
            for (const object of layer.objects) {
                if (object.name === "player") {
                    entities.player = map.add(
                        generatePlayerComponents(k, k.vec2(object.x, object.y))
                    );
                    continue;
                }

                if (object.name === "oldman") {
                    entities.oldman = map.add(
                        generateOldManComponents(k, k.vec2(object.x, object.y))
                    );
                    continue;
                }
            }

            continue;
        }

        drawTiles(k, map, layer, mapData.tileheight, mapData.tileheight);
    }

    k.camScale(4);
    setPlayerControls(k, entities.player);
    entities.player.onCollide("door-exit", () => {
        gameState.setPreviousScene("house");
        k.go("schoolfront");
    });

    entities.player.onCollide("oldman", async () => {
        k.play("bubble-sfx");
        await startInteraction(k, entities.oldman, entities.player);
    });

    entities.player.onCollideEnd("oldman", () => {
        endInteraction(entities.oldman);
    });

    healthBar(k);

    let isLocaleLocked = { value: false };
    let isMuteLocked = { value: false };

    // 키보드 단축키
    k.onKeyPress("l", () => {
        toggleLocale(k, gameState, isLocaleLocked);
    });

    k.onKeyPress("m", () => {
        toggleMute(k, gameState, isMuteLocked);
    });

    // 게임패드 컨트롤 (L/R 숄더 버튼)
    k.onGamepadButtonPress("lshoulder", () => {
        // L버튼
        console.log("🎮 House - L버튼 눌림 (언어 변경)");
        toggleLocale(k, gameState, isLocaleLocked);
    });

    k.onGamepadButtonPress("rshoulder", () => {
        // R버튼
        console.log("🎮 House - R버튼 눌림 (음소거 토글)");
        toggleMute(k, gameState, isMuteLocked);
    });

    // 게임패드 트리거 버튼도 추가
    k.onGamepadButtonPress("ltrigger", () => {
        // L2 트리거
        console.log("🎮 House - L2 트리거 눌림 (언어 변경)");
        toggleLocale(k, gameState, isLocaleLocked);
    });

    k.onGamepadButtonPress("rtrigger", () => {
        // R2 트리거
        console.log("🎮 House - R2 트리거 눌림 (음소거 토글)");
        toggleMute(k, gameState, isMuteLocked);
    });

    // 1번 키로 메인 메뉴 이동
    setupMainMenuShortcut(k, gameState);
}
